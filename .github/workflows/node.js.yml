name: Node.js CI

on:
  push:
    branches: [ "dev" ] # Escucha cambios en la rama 'test'
  pull_request:
    branches: [ "dev" ]

jobs:
  backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Start backend server
      run: |
        cd backend
        npm run server &
      env:
        NODE_ENV: production

    - name: Wait for backend server to start
      run: sleep 10

  frontend:
    needs: backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Build frontend
      run: cd frontend && npm run build

    - name: Preview frontend
      run: |
        cd frontend
        npm run preview &
      env:
        NODE_ENV: production

    - name: Wait for frontend to start
      run: sleep 5

  admin:
    needs: backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install admin dependencies
      run: cd admin && npm ci

    - name: Build admin
      run: cd admin && npm run build

    - name: Preview admin
      run: |
        cd admin
        npm run preview &
      env:
        NODE_ENV: production

    - name: Wait for admin to start
      run: sleep 5
      
  merge-to-test:
    needs: [frontend, admin]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure Git User
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Clean up untracked files and changes
      run: |
        git reset --hard
        git clean -fd

    - name: Restore specific files
      run: |
        git restore --source=HEAD .github/workflows/node.js.yml || true
        git restore --source=HEAD package-lock.json || true

    - name: Commit changes excluding workflows and root package-lock.json
      run: |
        git commit -m "Ready to Test without workflows and root package-lock.json" || echo "No changes to commit"

    - name: Merge dev into test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch origin test
        git checkout test
        git merge --no-ff dev -m "Merging dev into test" --allow-unrelated-histories -X theirs
        git push origin test
