name: Node.js CI

on:
  push:
    branches: [ "test" ] # Escucha cambios en la rama 'test'
  pull_request:
    branches: [ "test" ]

jobs:
  backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Start backend server
      run: |
        cd backend
        npm run server &
      env:
        NODE_ENV: production

    - name: Wait for backend server to start
      run: sleep 10

  frontend:
    needs: backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Build frontend
      run: cd frontend && npm run build

    - name: Preview frontend
      run: |
        cd frontend
        npm run preview &
      env:
        NODE_ENV: production

    - name: Wait for frontend to start
      run: sleep 5

  admin:
    needs: backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install admin dependencies
      run: cd admin && npm ci

    - name: Build admin
      run: cd admin && npm run build

    - name: Preview admin
      run: |
        cd admin
        npm run preview &
      env:
        NODE_ENV: production

    - name: Wait for admin to start
      run: sleep 5

  merge-to-main:
    needs: [frontend, admin]
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v4
  
    - name: Configure Git User
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
  
    - name: Update test branch with main
      run: |
        git fetch origin main
        git checkout test
        git merge origin/main --allow-unrelated-histories || true
        git push origin test
  
    - name: Preserve workflows folder
      run: |
        git restore --source=HEAD .github/workflows
        git add .github/workflows
        git commit -m "Preserve workflows folder" || echo "No changes to commit"

    - name: Commit changes excluding workflows
      run: |
        git status
        git commit -m "Ready to Deploy" || echo "No changes to commit"
  
    - name: Merge test into main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch origin main
        git checkout main
        git merge --no-ff test -m "Merging test into main" --allow-unrelated-histories -X theirs || (
          echo "Merge conflicts detected, but resolved with -X theirs strategy." && exit 1
        )
        git push origin main
